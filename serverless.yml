service: diabetelegram

provider:
  name: aws
  stage: ${self:custom.stage}
  runtime: python3.7
  region: eu-west-1
  iamRoleStatements:
    - Effect: 'Allow'
      Action: 'sns:*'
      Resource:
        - '${env:INSULIN_INJECTED_TOPIC_ARN}'
        - '${env:MEAL_EATEN_TOPIC_ARN}'
    - Effect: 'Allow'
      Action: 'dynamodb:*'
      Resource:
        - 'Fn::GetAtt': [ StateTable, Arn ]
  environment:
    stage: ${self:custom.stage}
  profile: ${self:custom.profiles.${self:custom.stage}, 'beta'}

functions:
  hello:
    name: diabetelegram-${self:custom.stage}
    handler: diabetelegram.handler.handler
    events:
      - http:
          path: /updates
          method: post

resources: # Serverless.yml definition
  Resources: # CloudFormation definition
    StateTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: diabetelegram-state
        # We can only define the columns used in the key/indexes, but the table can have more
        AttributeDefinitions:
          - AttributeName: user_id
            AttributeType: S
        KeySchema:
          - AttributeName: user_id
            KeyType: HASH
        ProvisionedThroughput:
            ReadCapacityUnits: 1
            WriteCapacityUnits: 1
        Tags:
          - Key: stage
            Value: ${self:custom.stage}
    ExpenseTable:
      Type: AWS::DynamoDB::Table
      Properties:
          TableName: algasbot-expenses
          AttributeDefinitions:
            - AttributeName: expense_id
              AttributeType: N
          KeySchema:
            - AttributeName: expense_id
              KeyType: HASH
          ProvisionedThroughput:
              ReadCapacityUnits: 1
              WriteCapacityUnits: 1
          Tags:
            - Key: stage
              Value: ${self:custom.stage}

plugins:
  - serverless-python-requirements
  - serverless-dotenv-plugin
custom:
  pythonRequirements:
    usePipenv: true
  stage: ${opt:env, 'prod'}
  profiles:
    beta: beta
    prod: default
